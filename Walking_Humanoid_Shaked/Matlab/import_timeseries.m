function Data = import_timeseries(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as a matrix.
%   DATA = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   DATA = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   Data = importfile1('Gait_timeseries.txt', 2, 760);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2023/05/16 08:33:19

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
%	column46: double (%f)
%   column47: double (%f)
%	column48: double (%f)
%   column49: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
Data = table;
Data.Time = dataArray{:, 1};
Data.HAMrT1 = dataArray{:, 2};
Data.HAMrT2 = dataArray{:, 3};
Data.GLUrT1 = dataArray{:, 4};
Data.HFLrT1 = dataArray{:, 5};
Data.RFrT1 = dataArray{:, 6};
Data.RFrT2 = dataArray{:, 7};
Data.VASrT1 = dataArray{:, 8};
Data.GASrT1 = dataArray{:, 9};
Data.GASrT2 = dataArray{:, 10};
Data.SOLrT1 = dataArray{:, 11};
Data.TArT1 = dataArray{:, 12};
Data.HAMlT1 = dataArray{:, 13};
Data.HAMlT2 = dataArray{:, 14};
Data.GLUlT1 = dataArray{:, 15};
Data.HFLlT1 = dataArray{:, 16};
Data.RFlT1 = dataArray{:, 17};
Data.RFlT2 = dataArray{:, 18};
Data.VASlT1 = dataArray{:, 19};
Data.GASlT1 = dataArray{:, 20};
Data.GASlT2 = dataArray{:, 21};
Data.SOLlT1 = dataArray{:, 22};
Data.TAlT1 = dataArray{:, 23};
Data.HiprA = dataArray{:, 24};
Data.KneerA = dataArray{:, 25};
Data.AnklerA = dataArray{:, 26};
Data.HiplA = dataArray{:, 27};
Data.KneelA = dataArray{:, 28};
Data.AnklelA = dataArray{:, 29};
Data.COMPX = dataArray{:, 30};
Data.COMPY = dataArray{:, 31};
Data.COMPZ = dataArray{:, 32};
Data.COMVX = dataArray{:, 33};
Data.COMVY = dataArray{:, 34};
Data.COMVZ = dataArray{:, 35};
Data.FootrPX = dataArray{:, 36};
Data.FootrPY = dataArray{:, 37};
Data.FootrPZ = dataArray{:, 38};
Data.FootlPX = dataArray{:, 39};
Data.FootlPY = dataArray{:, 40};
Data.FootlPZ = dataArray{:, 41};
Data.Stancer = dataArray{:, 42};
Data.Swingr = dataArray{:, 43};
Data.SPr = dataArray{:, 44};
Data.SIr = dataArray{:, 45};
Data.Stancel = dataArray{:, 46};
Data.Swingl = dataArray{:, 47};
Data.SPl = dataArray{:, 48};
Data.SIl = dataArray{:, 49};

